steps:
- task: CopyFiles@2
  displayName: 'Copy config.json'
  inputs:
    sourceFolder: '.ci/config'
    contents: 'config.json'
    targetFolder: 'tests/IntegrationTests'
- task: UseDotNet@2
  displayName: 'Install .NET'
  inputs:
    version: $(DotNetCoreSdkVersion)
    includePreviewVersions: true

- task: DotNetCoreCLI@2
  displayName: 'Restore packages'
  inputs:
    command: 'restore'
    verbosityRestore: 'minimal'

- task: DotNetCoreCLI@2
  displayName: 'Build'
  inputs:
    command: 'build'
    arguments: '-c Release --no-restore'

- task: DotNetCoreCLI@2
  displayName: 'Publish MySqlConnector.Tests'
  inputs:
    command: 'publish'
    arguments: '-c Release -f net8.0 --no-build tests/MySqlConnector.Tests/MySqlConnector.Tests.csproj'
    publishWebProjects: false
    zipAfterPublish: false
- task: PublishPipelineArtifact@0
  inputs:
    artifactName: 'MySqlConnector.Tests-8.0-$(Agent.OS)'
    targetPath: 'artifacts/publish/MySqlConnector.Tests/release_net8.0'

- task: DotNetCoreCLI@2
  displayName: 'Publish Conformance.Tests'
  inputs:
    command: 'publish'
    arguments: '-c Release -f net8.0 --no-build tests/Conformance.Tests/Conformance.Tests.csproj'
    publishWebProjects: false
    zipAfterPublish: false
- task: PublishPipelineArtifact@0
  inputs:
    artifactName: 'Conformance.Tests-8.0-$(Agent.OS)'
    targetPath: 'artifacts/publish/Conformance.Tests/release_net8.0'

- task: DotNetCoreCLI@2
  displayName: 'Publish MySqlConnector.DependencyInjection.Tests'
  inputs:
    command: 'publish'
    arguments: '-c Release -f net8.0 --no-build tests/MySqlConnector.DependencyInjection.Tests/MySqlConnector.DependencyInjection.Tests.csproj'
    publishWebProjects: false
    zipAfterPublish: false
- task: PublishPipelineArtifact@0
  inputs:
    artifactName: 'MySqlConnector.DependencyInjection.Tests-8.0-$(Agent.OS)'
    targetPath: 'artifacts/publish/MySqlConnector.DependencyInjection.Tests/release_net8.0'

- task: DotNetCoreCLI@2
  displayName: 'Publish IntegrationTests (7.0)'
  inputs:
    command: 'publish'
    arguments: '-c Release -f net8.0 --no-build tests/IntegrationTests/IntegrationTests.csproj'
    publishWebProjects: false
    zipAfterPublish: false
- task: PublishPipelineArtifact@0
  inputs:
    artifactName: 'IntegrationTests-net8.0-$(Agent.OS)'
    targetPath: 'artifacts/publish/IntegrationTests/release_net8.0'

- task: DotNetCoreCLI@2
  displayName: 'Publish IntegrationTests (6.0)'
  inputs:
    command: 'publish'
    arguments: '-c Release -f net6.0 --no-build tests/IntegrationTests/IntegrationTests.csproj'
    publishWebProjects: false
    zipAfterPublish: false
- task: PublishPipelineArtifact@0
  inputs:
    artifactName: 'IntegrationTests-net6.0-$(Agent.OS)'
    targetPath: 'artifacts/publish/IntegrationTests/release_net6.0'
